generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  udpatedAt DateTime @updatedAt
  ApiKey    ApiKey[]

  @@index([email])
}

model AppliedJob {
  jobId       String @id @default(cuid())
  fullName    String @default("none")
  email       String @default("none")
  job         String @default("none")
  jobCode     String @default("none")
  resume      String @default("none")
  coverLetter String @default("none")
}

model Employ {
  employId     String @id @default(cuid())
  fullName     String @default("none")
  skills       String @default("none")
  contribution String @default("none")
  organization String @default("none")
}

model User {
  userId            String              @id @default(cuid())
  fullName          String              @default("none")
  phone             String              @default("none")
  email             String              @unique
  address           String              @default("none")
  password          String              @default("none")
  registerType      RegisterType        @default(None)
  status            Status              @default(Pending)
  Artisan           Artisan[]
  Business          Business[]
  BuyerMembership   BuyerMembership[]
  CorpoMembership   CorpoMembership[]
  Institute         Institute[]
  SponsorMembership SponsorMembership[]

  @@index([email])
}

model Artisan {
  artisanId       String          @id @default(cuid())
  craftSpecialty  String          @default("none")
  craftSkill      SkillLevel      @default(None)
  craftExperience Int             @default(0)
  craftAward      String          @default("none")
  market          MarketType      @default(None)
  documents       String[]        @default([])
  status          String          @default("active")
  userId          String
  listingCriteria String
  criteria        LisitingCritera @relation(fields: [listingCriteria], references: [criteraId], onDelete: Cascade)
  user            User            @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model Business {
  businessId        String          @id @default(cuid())
  businessName      String          @default("none")
  businessEmail     String          @unique
  businessAddress   String          @default("none")
  businessType      BusinessLevel   @default(None)
  businessSold      String          @default("none")
  businessEmployee  Int             @default(0)
  documents         String[]        @default([])
  status            String          @default("active")
  listingCriteria   String
  userId            String
  businessMarket    MarketType      @default(None)
  yearOfOperation   Int             @default(1)
  businessNetwork   String          @default("none")
  businessStructure String          @default("none")
  businessWebsite   String          @default("none")
  criteria          LisitingCritera @relation(fields: [listingCriteria], references: [criteraId], onDelete: Cascade)
  user              User            @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([businessEmail])
}

model Institute {
  instituteId      String          @id @default(cuid())
  instituteName    String          @default("none")
  instituteEmail   String          @unique
  instituteType    InstitutionType @default(None)
  instituteAddress String          @default("none")
  instituteMission String          @default("none")
  instituteRep     String          @default("none")
  repDes           String          @default("none")
  documents        String[]        @default([])
  status           String          @default("active")
  listingCriteria  String
  userId           String
  criteria         LisitingCritera @relation(fields: [listingCriteria], references: [criteraId], onDelete: Cascade)
  user             User            @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([instituteEmail])
}

model BuyerMembership {
  buyerMemberId       String   @id @default(cuid())
  buyerType           String   @default("none")
  businessName        String   @default("none")
  businessType        String   @default("none")
  taxId               String   @default("none")
  country             String   @default("none")
  website             String   @default("none")
  productInterest     String[] @default([])
  orderVolume         String   @default("none")
  authentication      String   @default("none")
  traceability        String   @default("none")
  sustainability      String[] @default([])
  source              String   @default("none")
  newsletter          Boolean  @default(false)
  specialRequirements String   @default("none")
  terms               Boolean  @default(false)
  userId              String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model CorpoMembership {
  corpoMemberId           String   @id @default(cuid())
  institutionName         String   @default("none")
  institutionType         String   @default("none")
  industry                String   @default("none")
  yearEstablished         Int      @default(0)
  taxId                   String   @default("none")
  primaryContact          String   @default("none")
  contactEmail            String   @default("none")
  contactPhone            String   @default("none")
  website                 String   @default("none")
  headquartersAddress     String   @default("none")
  additionalLocations     String   @default("none")
  partnershipType         String   @default("none")
  partnershipGoals        String   @default("none")
  targetProducts          String[] @default([])
  csrInterest             String   @default("No")
  csrInitiatives          String   @default("none")
  sustainabilityPractices String   @default("none")
  businessLicense         String   @default("none")
  proofOfTaxID            String   @default("none")
  references              String   @default("none")
  engagementChannels      String   @default("none")
  customerDemographic     String   @default("none")
  brandMission            String   @default("none")
  specificRequirements    String   @default("none")
  challenges              String   @default("none")
  additionalComments      String   @default("none")
  terms                   Boolean  @default(false)
  userId                  String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  user                    User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model SponsorMembership {
  sponsorshipId           String   @id @default(cuid())
  sponsorName             String   @default("none")
  contactPerson           String   @default("none")
  email                   String   @unique
  phone                   String   @default("none")
  socialLinks             String   @default("none")
  sponsorType             String   @default("none")
  industry                String   @default("none")
  sponsorshipGoal         String   @default("none")
  objectives              String   @default("none")
  focusArea               String   @default("none")
  tier                    String   @default("none")
  budgetRange             String   @default("none")
  sponsorshipChannel      String   @default("none")
  eventInterest           String   @default("No")
  productCustomization    String   @default("none")
  csrInterest             String   @default("No")
  pastCSREfforts          String   @default("none")
  sustainabilityPractices String   @default("none")
  brandingOptions         String[] @default([])
  socialHandles           String   @default("none")
  communicationChannel    String   @default("none")
  impactMetrics           String[] @default([])
  reportFrequency         String   @default("none")
  publicUse               String   @default("No")
  specialRequirements     String   @default("none")
  additionalComments      String   @default("none")
  terms                   Boolean  @default(false)
  userId                  String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  user                    User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

model LisitingCritera {
  criteraId                 String       @id @default(cuid())
  sourceOfMaterial          String       @default("none")
  craftingProcess           String       @default("none")
  sustainablePractices      Boolean      @default(false)
  sustainabledescription    String       @default("none")
  fairWage                  Boolean      @default(false)
  genderSuport              Boolean      @default(false)
  womenPercentage           Int          @default(0)
  workplaceuphold           Boolean      @default(false)
  workplaceDescription      String       @default("none")
  childLabour               Boolean      @default(false)
  fairTrade                 Boolean      @default(false)
  fairtradeDoc              String[]     @default([])
  giHold                    Boolean      @default(false)
  giNumber                  String       @default("none")
  giDoc                     String       @default("none")
  blockChain                Boolean      @default(false)
  blockChainDoc             String[]     @default([])
  ethics                    Boolean      @default(false)
  qualityReview             Boolean      @default(false)
  profilePermission         Boolean      @default(false)
  complianceAcknowledgement Boolean      @default(false)
  listingRank               ListingRanks @default(None)
  Artisan                   Artisan[]
  Business                  Business[]
  Institute                 Institute[]
}

model Category {
  categoryId    String        @id @default(cuid())
  categoryName  String        @unique
  rank          Int           @default(100)
  description   String        @default("none")
  subcategories SubCategory[]
}

model SubCategory {
  subcategoryId   String          @id @default(cuid())
  subcategoryName String          @default("none")
  categoryId      String
  sections        CarbonSection[]
  CraftPicture    CraftPicture[]
  CraftSection    CraftSection[]
  Material        Material[]
  PriceSection    PriceSection[]
  category        Category        @relation(fields: [categoryId], references: [categoryId], onDelete: Cascade)
}

model Material {
  materialId    String        @id @default(cuid())
  materialName  String        @default("none")
  subcategoryId String
  carbonValues  CarbonValue[]
  subcategory   SubCategory   @relation(fields: [subcategoryId], references: [subcategoryId], onDelete: Cascade)
  PriceValue    PriceValue[]
}

model CarbonSection {
  carbonsectionId String        @id @default(cuid())
  sectionType     SectionType   @default(None)
  subCategoryId   String
  subCategory     SubCategory   @relation(fields: [subCategoryId], references: [subcategoryId], onDelete: Cascade)
  values          CarbonValue[]
}

model PriceSection {
  priceSectionId String       @id @default(cuid())
  sectionType    SectionType  @default(None)
  subCategoryId  String
  subCategory    SubCategory  @relation(fields: [subCategoryId], references: [subcategoryId], onDelete: Cascade)
  values         PriceValue[]
}

model CarbonValue {
  valueId         String        @id @default(cuid())
  name            String        @default("none")
  value           String        @default("0-0")
  materialId      String
  carbonsectionId String
  carbonSection   CarbonSection @relation(fields: [carbonsectionId], references: [carbonsectionId], onDelete: Cascade)
  material        Material      @relation(fields: [materialId], references: [materialId], onDelete: Cascade)
}

model PriceValue {
  valueId        String       @id @default(cuid())
  name           String       @default("none")
  priceSectionId String
  materialId     String
  value          Int          @default(0)
  material       Material     @relation(fields: [materialId], references: [materialId], onDelete: Cascade)
  priceSection   PriceSection @relation(fields: [priceSectionId], references: [priceSectionId], onDelete: Cascade)
}

model GIReport {
  giId        String @id @default(cuid())
  fullName    String @default("none")
  email       String @default("none")
  report      String @default("none")
  productCode String @default("none")
}

model CraftSection {
  craftsectionId  String            @id @default(cuid())
  sectionName     String            @default("none")
  subCategoryId   String
  rank            Int               @default(100)
  CraftQuiz       CraftQuiz[]
  subCategory     SubCategory       @relation(fields: [subCategoryId], references: [subcategoryId], onDelete: Cascade)
  CraftSubSection CraftSubSection[]
}

model CraftSubSection {
  craftsubsectionId String         @id @default(cuid())
  sectionName       String         @default("none")
  sectionId         String
  rank              Int            @default(100)
  CraftContent      CraftContent[]
  section           CraftSection   @relation(fields: [sectionId], references: [craftsectionId], onDelete: Cascade)
}

model CraftContent {
  craftsubsectionId String          @id @default(cuid())
  content           String          @default("none")
  subsectionId      String
  subSection        CraftSubSection @relation(fields: [subsectionId], references: [craftsubsectionId], onDelete: Cascade)
}

model CraftQuiz {
  quizId    String       @id @default(cuid())
  question  String       @default("none")
  option1   String       @default("none")
  option2   String       @default("none")
  option3   String       @default("none")
  option4   String       @default("none")
  answer    String       @default("none")
  sectionId String
  section   CraftSection @relation(fields: [sectionId], references: [craftsectionId], onDelete: Cascade)
}

model CraftPicture {
  pictureId      String      @id @default(cuid())
  subcategroryId String
  picture        String      @default("none")
  subCategory    SubCategory @relation(fields: [subcategroryId], references: [subcategoryId], onDelete: Cascade)
}

model ApiKey {
  keyId     String  @id @default(cuid())
  accountId String
  key       String
  Account   Account @relation(fields: [accountId], references: [accountId], onDelete: Cascade)
}

model CraftDiscount {
  discountId         String @id @default(cuid())
  discountPercentage Int    @default(0)
  code               String @default("none")
  email              String @unique
}

enum SectionType {
  None
  Quality
  ProductLine
  RawMaterial
  Processing
  ProductionMethod
  Packaging
  Transportation
  Crafting
  Installation
  Finishing
  Preparation
  CookingProcess
  PaintingAndLacquering
  Embroidery
  MaterialType
  ProductionProcess
  ProductCertifications
  PlyType
  TypeOfWeaving
  DesignPatternTypes
  DyeTypes
  FinishingTechniques
  ProductLineSize
  ColorShades
  Embellishments
  Certifications
  MaterialGrading
  ProductTypesSizes
  KnotPerInch
  Dimensions
  CarvingTechniques
  ScaleOfCarving
  FinishOptions
  PatternTypes
  FabricAndMaterial
}

enum Role {
  ADMIN
  SUPERADMIN
  API
}

enum ListingRanks {
  None
  Gold
  Silver
  Bronze
}

enum InstitutionType {
  None
  Governance
  NGO
  Training_Body
  Educational_Body
}

enum BusinessLevel {
  None
  Large_Enterprice
  Mid_sized_Business
  Small_Business
  Startup
}

enum SkillLevel {
  None
  Expert
  Advanced
  Beginner
}

enum RegisterType {
  None
  Artisan
  Business
  Institution
  BuyerMembership
  CorpoMembership
  SponsorMembership
}

enum MarketType {
  None
  Local
  National
  International
}

enum Status {
  Pending
  Actice
}
